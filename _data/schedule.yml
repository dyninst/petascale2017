---
sessions:
  - title: Breakfast
    time: 07:30am
    days:
      - monday
      - tuesday
      - wednesday
      - thursday
    class: sbreak
  - title: Lunch
    time: 12:00pm
    days:
      - monday
      - tuesday
      - wednesday
      - thursday
    class: sbreak
  - title: Reception
    time: 17:30pm
    days:
      - sunday
      - monday
      - tuesday
      - wednesday
    class: sbreak
  - title: Dinner
    time: 18:30pm
    days:
      - sunday
      - monday
      - tuesday
      - wednesday
    class: sbreak
  - title: Break
    time: 10:00am
    days:
      - monday
      - tuesday
      - wednesday
      - thursday
    class: sbreak
  - title: Break
    time: 14:30pm
    days:
      - monday
      - tuesday
    class: sbreak
  - days: monday
    time: 08:30am
    title: "Tools Infrastructure #1"
    talks:
    - title: Dyninst and MRNet Update
      author: Bill Williams and Sasha Nicolas
      affiliation: University of Wisconsin
      length: 1800
    - title: Continuous Clock Synchronization for Accurate Performance Analysis
      author: Johannes Ziegenbalg
      affiliation: TU Dresden
      length: 1800
      abstract: "Clock synchronization is a key prerequisite for accurate performance analysis.
                     This is particularly true for most HPC systems, due to the lack of a
                     system-wide timer. The effects of different clock properties lead to false
                     measurements and wrong conclusions. Often these errors remain undetected by the
                     user.

                     Different environmental effects cause continuous changes to clock properties
                     over time. This behavior is ignored by the usual post-mortem approach for
                     clock synchronization. In order to improve time measurement accuracy we
                     implemented a method for continuous clock synchronization. In this talk we
                     share our experiences and draw conclusions for tool development. "
    - title: "SNOflake - A Scalable Network Overlay for Multi-domain HPC Environments"
      author: Michael Brim
      affiliation: ORNL
      length: 1800
      abstract: "SNOflake is a general purpose Scalable Network Overlay technology targeted at
                     HPC environments. SNOflake supports deployments of overlay networks spanning
                     many network domains (e.g., compute clusters, service nodes, and storage
                     system). SNOflake extends the tree-based overlay network (TBON) technology
                     pioneered by MRNet into a ring-of-TBONs architecture where one or more TBONs
                     are placed on each network domain. This presentation will first cover the
                     SNOflake design goals and architecture, and then discuss two ORNL software
                     technologies, MELT and ExCDS, that leverage SNOflake for scalable end-to-end
                     monitoring and management of HPC storage I/O."
  - days: monday
    time: 10:30am
    title: "Performance Tools"
    talks:
      - title: "Evolving the HPCToolkit"
        author: John Mellor-Crummey
        affiliation: Rice University
        length: 1800
      - title: "Anticipating Aurora: Valgrind, AVX-512, and Intel HPC Analysis Tools"
        author: Tatyana Mineeva and Rashawn Knapp
        affiliation: Intel
        length: 1800
        abstract: "   In collaboration with performance tool developers, our team enables
                       open-source HPC analyzers and measurement tools for CORAL
                       (Collaboration of Oak Ridge, Argonne, and Livermore) supercomputer
                       installations, Theta and Aurora, at Argonne National Laboratory.

                       We provide an HPC focused overview of capabilities available with
                       Intel performance analysis tools. Recently, a number of HPC-oriented
                       features, including a roofline model and vectorization advice, have
                       been added to Intel tools. We will show demonstrations of the analysis
                       made by Intel VTune Amplifier XE, Intel Advisor, and Intel Trace Analyzer
                       and Collector, on a single KNL node and on a modest-sized KNL cluster.
                       Many of these tools are available at no cost to qualified open source
                       contributors, students, and educators for non-commercial use.

                       We follow up with our progress on adding support of AVX-512 instructions
                       to Valgrind, a dynamic instrumentation framework, widely known for its
                       memcheck tool. AVX-512 instruction support will allow Valgrind to function

                       on Aurora, which is the 3rd Generation Intel(tm) Xeon Phi processor, codenamed
                       Knights Hill (KNH). We will highlight the notable features of the AVX-512
                       extensions.

                       We close with a few brief updates regarding other on-going work."
      - title: "MPIcere: Towards a Tool for MPI Code Extraction and Replay"
        author: Allen Malony
        affiliation: University of Oregon
        length: 1800
  - days: monday
    time: 13:30pm
    title: "Analysis Techniques #1"
    talks:
      - title: Exposing Hidden Performance Optimizations in High Performance GPU Applications
        author: Benjamin Welton
        affiliation: UW-Madison
        length: 1800
      - title: "Continuous Metric Collection and Assessment - an Ecosystem Approach"
        author: David Montoya
        affiliation: LANL
        length: 1800
      - title: "Extending Performance Monitoring Profile Guided Optimization (PGO) Capabilities"
        author: Michael Chynoweth
        affiliation: Intel
        length: 1800
        abstract: "Currently the last branch records are being used to determine the paths of
                       execution and optimize code layout with profile guided optimizations. This
                       presentation will cover the research we are accomplishing to take PGO beyond
                       fixing text/code section issues and how it will be used to assist targeted
                       optimizations through determining which portion of the pipeline is stalled
                       and apply optimizations specifically for that bottleneck. Specifically we
                       will cover aggressive loop optimizations, data layout, lock/cache contention
                       determined through use of ~100 performance monitoring events and automatically
                       apply the right compiler optimizations for the execution characteristics of
                       each application."
  - days: monday
    time: 15:00pm
    title: "Analysis Techniques #2"
    talks:
      - title: "TMAM: Top-down Microarchitecture Analysis Method simplifies Cycle Accounting"
        author: Ahmad Yasin
        affiliation: Intel
        length: 1800
        abstract: "    Top-down Microarchitecture Analysis Method (TMAM) is an industry-proven
                       systematic approach that identifies performance bottlenecks in out-of-order
                       cores. Identifying true bottlenecks lets developers focus software tuning to
                       remediate them and improve efficiently on same hardware. It further enables
                       computer architects to better understand resource demands of emerging
                       workloads when designing future hardware. TMAM simplifies cycle-accounting
                       using microarchitecture-independent metrics organized in one single hierarchy
                       which makes analysis simple. Using TMAM, the high-learning curve associated
                       with each microarchitecture generation is replaced by a structured drill-down
                       that guides the user to true performance limiters. This talk will present the
                       key challenges that cycle-accounting faces and how the basic metrics of TMAM
                       address them on Intel Core/Xeon products."
      - title: "Isoefficiency in Practice: Configuring and Understanding the Performance of Task-based Applications"
        author: Sergei Shudler
        affiliation: TU Darmstadt
        length: 1800
        abstract: "Task-based programming offers an elegant way to express units of
                       computation and the dependencies among them, making it easier to
                       distribute the computational load evenly across multiple cores. However, this
                       separation of problem decomposition and parallelism requires a sufficiently
                       large input problem to achieve satisfactory efficiency on a given number of
                       cores. Unfortunately, finding a good match between input size and core count
                       usually requires significant experimentation, which is expensive and sometimes
                       even impractical. In this paper, we propose an automated empirical method for
                       finding the isoefficiency function of a task-based program, binding
                       efficiency, core count, and the input size in one analytical expression. This
                       allows the latter two to be adjusted according to given (realistic) efficiency
                       objectives. Moreover, we not only find (i) the actual isoefficiency function
                       but also (ii) the function one would yield if the program execution was free
                       of resource contention and (iii) an upper bound that could only be reached if
                       the program was able to maintain its average parallelism throughout its
                       execution. The difference between the three helps to explain low efficiency,
                       and in particular, it helps to differentiate between resource contention and
                       structural conflicts related to task dependencies or scheduling. The insights
                       gained can be used to co-design programs and shared system resources."
      - title: "Is it me, or is it the machine?"
        author: Judit Gimenez
        affiliation: Barcelona Supercomputer Center
        length: 1800
        abstract: "Sometimes programmers do a good job but the execution does not report the
                       expected performance. The first step to improve the performance is to
                       understand what is going on, and flexible tools like Paraver are key to face
                       unknown problems that can be anywhere.

                       During the tools training, I used to ask for a code from the attendees to be
                       used for the demo, but sometimes no example is provided. In these cases I run
                       the Lulesh benchmark. As a result, I have collected Paraver traces of Lulesh
                       running on many different systems. The talk will present the high variability
                       I have observed on the achieved performance with the same source code, as well
                       as the ability of our performance tools to pinpoint what is causing the loss
                       of performance."
  - days: tuesday
    time: 08:30am
    title: "Tools Infrastructure #2"
    talks:
      - title: Autotools for Supercomputers
        author: Christian Feld
        affiliation: Juelich Supercomputer Center
        length: 1800
        abstract: "Developing portable software is hard. To mitigate this process, leveraging
                       the widely adopted GNU autotools can be beneficial as they significantly
                       reduce the effort of writing portable build systems. However, assumptions
                       made by GNU autotools do not match the obstacles developers face on today's
                       supercomputers with their various combinations of login- and compute-node
                       architectures, compilers, and libraries. With Autotools for Supercomputers
                       (AfS), we propose a modular framework on top of GNU autotools that addresses
                       this mismatch by hiding the complexities of system diversity from developers
                       and users, offering reasonable defaults as well as fuss-free options for
                       customization.

                       For developers, AfS reduces the effort of creating portable make targets to
                       the choice for which architecture to build them (login- and/or compute-node,
                       MPI, accelerator), while users benefit from a unified and simplified
                       configuration process. Last but not least, build system maintainers are
                       provided with working solutions to produce robust and maintainable systems,
                       at the same time preventing from common pitfalls, particularly with regard
                       to cross-compilation. AfS is actively maintained and successfully used by
                       several projects running on a wide variety of supercomputers."
      - title: Infrastructure for Ubiquitous Performance Analysis
        author: David Poliakoff
        affiliation: LLNL
        abstract: "In this talk we will discuss tightly integrating performance tools into
                       applications.  Building tightly-coupled performance tools enables
                       capabilities like \"always on\" performance analysis, performance history
                       tracking, and performance introspection.  It also simplifies tool
                       development by letting tools leverage application infrastructure.  This
                       talk will focus on new tool components that enable tighter application and
                       performance tool coupling.  We will discuss Gotcha, which
                       provides a mechanism for tools to intercept application operations, and
                       SPOT, web infrastructure for visualizing performance history.  By making
                       our tools an essential component in applications we can raise both the
                       visibility and importance of performance tools in the HPC community."
        length: 1800
      - title: Recent Advances in PAPI
        author: Anthony Danalis
        affiliation: University of Tennessee
        length: 1800
  - days: tuesday
    time: 10:30am
    title: "Tools Infrastructure #3"
    talks:
      - title: "Flexible Data Aggregation for Performance Profiling"
        author: "David Boehme"
        affiliation: "LLNL"
        length: 1800
      - title: "The State and Needs of IO Tools"
        author: "Greg Becker and Elsa Gonsiorowski"
        affiliation: "LLNL"
        length: 1800
  - days: tuesday
    time: 11:30am
    title: History
    talks:
      - title: HPC in Ancient History
        author: Marty Itzkowitz
        affiliation: retired
        length: 1800
  - days: tuesday
    time: 13:30pm
    title: Working Group Creation
  - days: tuesday
    time: 15:00pm
    title: Working Groups
  - days: wednesday
    time: 08:30am
    title: Working Groups
    talks:
  - days: wednesday
    time: 10:30am
    title: Working Groups
    talks:
  - days: wednesday
    time: 13:30pm
    title: Informal Small Group Discussions
  - days: thursday
    time: 08:30am
    title: Working Group Concluding Sessions and Outbriefs
    talks:
  - days: thursday
    time: 10:30am
    title: Working Group Outbriefs
    talks:
  - days: sunday
    time: 12:00pm
    title: Arrival
    class: sbreak
  - days: thursday
    time: 1:30pm
    title: Departure
    class: sbreak
